How to things:

exclude files from git tracking
git bash:
cd .git
ls --> info
cd info
ls --> exclude
cat exclude

# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~
.terraform
.terraform.lock.hcl

nano exclude --> add file/directory name to exclude it from tracking or add to commit
crtl+x, press enter

##############################################
#creating 2 or more routes with in a route table

locals {
  cidr_list = [ "155.0.5.0/24", "155.0.6.0/24" ]
}

    dynamic "route" {
        for_each = local.cidr_list
        content {
          cidr_block = route.value
          nat_gateway_id = aws_nat_gateway.nat_gw.id
        }
      
    }

#############################################
# creating 2 or more routing tables with different routes

locals {
  cidr_blocks = ["155.0.5.0/24", "155.0.6.0/24"]
}

resource "aws_route_table" "private_rt" {
  for_each = toset(local.cidr_blocks)

  vpc_id = aws_vpc.main.id

  route {
    cidr_block = each.value  # Directly using each CIDR block
    gateway_id = aws_nat_gateway.nat_gw.id
  }

  tags = {
    Name = "private-rt-${each.value}"
  }
}

############################################
# creating 2 or more different routing tables with different routes and route associations

locals {
  route_tables = {
    "private-rt-1" = {
      cidr_block   = "155.0.5.0/24"
      subnet_id    = aws_subnet.private_subnets[0].id
    }
    "private-rt-2" = {
      cidr_block   = "155.0.6.0/24"
      subnet_id    = aws_subnet.private_subnets[1].id
    }
  }
}

resource "aws_route_table" "private_rt" {
  for_each = local.route_tables

  vpc_id = aws_vpc.main.id

  route {
    cidr_block = each.value.cidr_block
    gateway_id = aws_nat_gateway.nat_gw.id  # Modify as needed
  }

  tags = {
    Name = each.key
  }
}

resource "aws_route_table_association" "private_rt_assoc" {
  for_each = local.route_tables

  subnet_id      = each.value.subnet_id
  route_table_id = aws_route_table.private_rt[each.key].id
}